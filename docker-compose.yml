services:
  postgres:
    image: postgres:15
    container_name: newsletter-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: newsletter
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrate
    container_name: newsletter-migration
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      POSTGRES_PRISMA_URL: postgresql://postgres:postgres@postgres:5432/newsletter
      POSTGRES_URL_NON_POOLING: postgresql://postgres:postgres@postgres:5432/newsletter
    command: npx prisma migrate deploy
    profiles: ["default", "production"]

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: newsletter-app
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    environment:
      NODE_ENV: production
      POSTGRES_PRISMA_URL: postgresql://postgres:postgres@postgres:5432/newsletter
      POSTGRES_URL_NON_POOLING: postgresql://postgres:postgres@postgres:5432/newsletter
      PORT: 3000
    ports:
      - "3000:3000"
    restart: unless-stopped
    profiles: ["default", "production"]

volumes:
  postgres-data:
